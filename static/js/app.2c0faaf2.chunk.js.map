{"version":3,"sources":["assets/logo-main.png","Landing.js","components/content-maker/Editor.js","components/content-maker/LessonPreview.js","components/content-maker/PillSubtopic.js","components/content-maker/Previews.js","components/content-maker/PillTopic.js","components/content-maker/PillSubject.js","components/content-maker/QuesionsManager/QuestionPreview.js","components/content-maker/QuestionsManager.js","components/content-maker/LessonMaker/PillSubtopic.js","components/content-maker/LessonMaker/PillObjective.js","components/content-maker/LessonMaker.js","components/content-maker/ImageManager.js","ContentMaker.js","Setup.js","components/content-maker/PillSubjectConfigurator.js","config.js","components/configurator/TopicManager.js","components/configurator/SubtopicsManager.js","components/configurator/ObjectivesManager.js","Configurator.js","App.js","assets/moonlab2.jpeg","assets/fonts/Lato-Black.ttf","assets/fonts/Lato-Light.ttf","assets/fonts/Lato-Regular.ttf"],"names":["module","exports","styles","StyleSheet","create","container","flex","backgroundColor","window","Dimensions","get","screen","App","setShowConfigurator","setShowContentMaker","setShowSetup","useState","dimensions","setDimensions","onChange","useEffect","addEventListener","removeEventListener","useFonts","require","View","style","Image","resizeMode","width","height","position","top","bottom","source","LinearGradient","colors","opacity","flexDirection","margin","alignItems","justifyContent","Text","fontFamily","fontSize","color","textAlign","marginLeft","alignSelf","marginTop","TouchableOpacity","onPress","padding","borderRadius","marginHorizontal","left","size","name","Editor","addLesson","content","setContent","setShowQuestionLessonChooser","selected","setSelected","paddingTop","activeType","setActiveType","QuestionTypeBox","type","borderWidth","borderColor","marginVertical","EssayInput","marginBottom","paddingVertical","paddingHorizontal","TextInput","placeholderTextColor","multiline","outline","placeholder","FillInInput","StructuredInput","optionAnswer","setOptionAnswer","1","2","3","4","options","setOptions","AnswerOption","option","num","onChangeText","text","txt","copy","updateVal","ScrollView","length","Button","contentStyle","theme","roundness","primary","mode","icon","value","onSelectionChange","nativeEvent","selection","start","end","substring","LessonPreview","id","updateLesson","setShowQuestionsManager","showQuestionLessonChooser","setChosenLesson","chosenLesson","maxLines","setMaxLines","tempContent","setTempContent","editing","setEditing","console","log","input","useRef","marginRight","numberOfLines","ref","flexWrap","current","requestFocus","PillTopic","title","activeSubtopic","setActiveSubtopic","setShowSubtopics","minWidth","Previews","subtopics","lessons","show","showQuestionsManager","showSubtopics","map","element","i","toString","activeTopic","setActiveTopic","setShowTopics","PillSubject","activeSubject","setActiveSubject","setShowSubjects","question","answer","updateQuestion","tempAnswer","setTempAnswer","editingAnswer","setEditingAnswer","answerList","setAnswerList","split","ops","op","tempVal","correct","innerVal","setInnerVal","replaceAll","lessonID","ID","Number","LessonID","Question","Type","Options","Answer","questionList","activeObjective","setActiveObjective","objectives","currLesson","setShowLessonMaker","saveLesson","right","Divider","disabled","ImageManager","ImageView","src","description","uri","imageList","setImageList","push","addImage","FlatList","data","renderItem","item","keyExtractor","ContentMaker","showSubjects","showTopics","items","topics","setLessons","setShow","showLessonMaker","setCurrLesson","showImageImanager","temp","obj","setTimeout","lesson","objective","subtopic","replace","Setup","outlineColor","Icon","accent","PillSubjectConfigurator","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","TopicManager","db","firestore","setTopics","setOriginal","collection","doc","toLowerCase","then","querySnapshot","forEach","Title","topic","clearEmppty","filled","updatedNums","x","setRefresh","refresh","saving","setSaving","scrollV","TopicComponent","tempTitle","setTempTitle","topicID","val","scrollToEnd","loading","a","async","saveRef","isLast","set","Sections","IsLast","extraData","SubtopicsManager","setSubtopics","collectionGroup","where","subtopicID","TopicID","Subject","setObjectives","objectiveID","SubtopicID","Configurator","subjects","horizontal","showSetup","showContentMaker","showConfigurator"],"mappings":"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","file":"static/js/app.2c0faaf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-main.10c52d60.png\";","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"react-native-elements\";\nimport { useFonts } from \"expo-font\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport MediaQuery from \"react-responsive\";\nimport { Button } from \"react-native-paper\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default function App({\n  setShowConfigurator,\n  setShowContentMaker,\n  setShowSetup,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"./assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"./assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  return (\n    <View style={styles.container}>\n      <Image\n        resizeMode=\"cover\"\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height + 100,\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n        }}\n        source={require(\"./assets/moonlab2.jpeg\")}\n      />\n      <LinearGradient\n        // Button Linear Gradient\n        colors={[\"#002326\", \"#111111\", \"#090717\"]}\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height + 100,\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          opacity: 0.99,\n        }}\n      />\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          margin: 30,\n          alignItems: \"center\",\n          justifyContent: \"c\",\n        }}\n      >\n        <Image\n          resizeMode=\"contain\"\n          style={{ height: 100, width: 100 }}\n          source={require(\"./assets/logo-main.png\")}\n        />\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            fontSize: 36,\n            color: \"silver\",\n            opacity: 0.9,\n            textAlign: \"center\",\n            marginLeft: 12,\n          }}\n        >\n          Kytte Moonlab\n        </Text>\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignSelf: \"center\",\n          justifyContent: \"center\",\n          marginTop: 64,\n        }}\n      >\n       <TouchableOpacity onPress={() => setShowConfigurator(true)}>\n          <View\n            style={{\n              flexDirection: \"column\",\n              padding: 20,\n              height: 160,\n              width: 170,\n              borderRadius: 12,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginHorizontal: 8,\n            }}\n          >\n            <View\n              style={{\n                height: 160,\n                width: 170,\n                borderRadius: 12,\n                opacity: 0.43,\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                backgroundColor: \"black\",\n              }}\n            />\n            <Icon\n              style={{ opacity: 0.8 }}\n              color=\"white\"\n              size={36}\n              name=\"settings\"\n            />\n            <Text\n              style={{\n                color: \"white\",\n                opacity: 0.8,\n                fontFamily: \"Lato-Light\",\n                fontSize: 20,\n                marginTop: 8,\n              }}\n            >\n              Configurator\n            </Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => setShowContentMaker(true)}>\n          <View\n            style={{\n              flexDirection: \"column\",\n              padding: 20,\n              height: 160,\n              width: 170,\n              borderRadius: 12,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginHorizontal: 8,\n            }}\n          >\n            <View\n              style={{\n                height: 160,\n                width: 170,\n                borderRadius: 12,\n                opacity: 0.43,\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                backgroundColor: \"black\",\n              }}\n            />\n            <Icon\n              style={{ opacity: 0.8 }}\n              color=\"white\"\n              size={36}\n              name=\"edit\"\n            />\n            <Text\n              style={{\n                color: \"white\",\n                opacity: 0.8,\n                fontFamily: \"Lato-Light\",\n                fontSize: 20,\n                marginTop: 8,\n              }}\n            >\n              Content maker\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nimport { Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native\";\n\nexport default function Editor({\n  addLesson,\n  content,\n  setContent,\n  setShowQuestionLessonChooser,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  const [selected, setSelected] = useState(\"\");\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const [displayQuestionPad, setDisplayQuestionPad] = useState(true);\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.5,\n      height: dimensions.window.height - 120,\n      flexDirection: \"column\",\n      backgroundColor: \"#8B9FB4\",\n      borderRadius: 12,\n      paddingTop: 20,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  const [activeType, setActiveType] = useState(\"MCQ\");\n\n  function QuestionTypeBox({ type }) {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          activeType == \"\" || activeType != type\n            ? setActiveType(type)\n            : setActiveType(\"\");\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View\n            style={{\n              height: 35,\n              width: 30,\n              borderRadius: 6,\n              borderWidth: 1,\n              borderColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginVertical: 4,\n              backgroundColor: \"grey\",\n            }}\n          >\n            {activeType == type && <Icon color=\"#0CFF77\" name=\"check\" />}\n          </View>\n          <Text\n            style={{\n              marginHorizontal: 12,\n              fontFamily: \"Lato-Regular\",\n              color: \"white\",\n            }}\n          >\n            {type}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  function EssayInput() {\n    return (\n      <View\n        style={{\n          flexDirection: \"column\",\n          backgroundColor: \"#798DA5\",\n          borderRadius: 8,\n          marginBottom: 4,\n          paddingVertical: 20,\n          paddingHorizontal: 20,\n        }}\n      >\n        <TextInput\n          placeholderTextColor=\"silver\"\n          multiline={true}\n          style={{\n            color: \"white\",\n            outline: \"none\",\n            height: 250,\n            width: \"100%\",\n          }}\n          placeholder=\"Enter answer to essay question\"\n        />\n      </View>\n    );\n  }\n\n  function FillInInput() {\n    return (\n      <View\n        style={{\n          flexDirection: \"column\",\n          backgroundColor: \"#798DA5\",\n          borderRadius: 8,\n          marginBottom: 4,\n          paddingVertical: 20,\n          paddingHorizontal: 20,\n        }}\n      >\n        <TextInput\n          placeholderTextColor=\"silver\"\n          style={{\n            color: \"white\",\n            outline: \"none\",\n            width: \"100%\",\n          }}\n          placeholder=\"Enter answer to fill-in question\"\n        />\n      </View>\n    );\n  }\n\n  function StructuredInput() {\n    return (\n      <View\n        style={{\n          flexDirection: \"column\",\n          backgroundColor: \"#798DA5\",\n          borderRadius: 8,\n          marginBottom: 4,\n          paddingVertical: 20,\n          paddingHorizontal: 20,\n        }}\n      >\n        <TextInput\n          placeholderTextColor=\"silver\"\n          multiline={true}\n          style={{\n            color: \"white\",\n            outline: \"none\",\n            width: \"100%\",\n            height: 150,\n          }}\n          placeholder=\"Enter answer to structured question\"\n        />\n      </View>\n    );\n  }\n\n  const [optionAnswer, setOptionAnswer] = useState(\"\");\n\n  const [options, setOptions] = useState({\n    1: \"\",\n    2: \"\",\n    3: \"\",\n    4: \"\",\n  });\n\n  const done = () => {\n    //  console.log(options);\n  };\n\n  function AnswerOption({ option, num }) {\n    const updateVal = (txt, num) => {\n      let copy = options;\n      copy[num] = txt;\n      setOptions(copy);\n    };\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          backgroundColor: \"#798DA5\",\n          borderRadius: 8,\n          marginBottom: 4,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            optionAnswer == num && setOptionAnswer(\"\");\n            optionAnswer != num && setOptionAnswer(num);\n          }}\n        >\n          <View\n            style={{\n              height: \"100%\",\n              backgroundColor: \"#4A5A6E\",\n              width: 35,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRadius: 8,\n            }}\n          >\n            {optionAnswer == num && <Icon name=\"check\" />}\n            {optionAnswer != num && (\n              <Text style={{ color: \"white\", fontFamily: \"Lato-Light\" }}>\n                {num}\n              </Text>\n            )}\n          </View>\n        </TouchableOpacity>\n        <TextInput\n          placeholderTextColor=\"silver\"\n          onChangeText={(text) => {\n            updateVal(text, num);\n          }}\n          style={{\n            paddingHorizontal: 20,\n            paddingVertical: 15,\n            color: \"white\",\n            outline: \"none\",\n            flex: 1,\n          }}\n          placeholder={option}\n        />\n      </View>\n    );\n  }\n\n  const questionMaker = () => {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          backgroundColor: \"#576477\",\n          padding: 20,\n          borderRadius: 12,\n          marginBottom: 12,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\n          <Button\n            onPress={() => setShowQuestionLessonChooser(true)}\n            color=\"silver\"\n          >\n            Select lesson\n          </Button>\n          <Button onPress={() => done()} icon=\"check\" color=\"silver\">\n            Save changes\n          </Button>\n          <Button icon=\"close\" color=\"silver\">\n            Cancel\n          </Button>\n        </View>\n        <Text\n          style={{ fontFamily: \"Lato-Black\", color: \"silver\", fontSize: 16 }}\n        >\n          Question\n        </Text>\n        <TextInput\n          value=\"Describe the pumping of blood througout the body by the heart?\"\n          multiline={true}\n          placeholderTextColor=\"silver\"\n          style={{\n            outline: \"none\",\n            width: \"100%\",\n            color: \"white\",\n            marginTop: 4,\n            fontSize: 16,\n          }}\n          placeholder=\"Question\"\n        />\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            color: \"silver\",\n            fontSize: 16,\n            marginTop: 12,\n            marginBottom: 8,\n          }}\n        >\n          Question type\n        </Text>\n        <View style={{ flexDirection: \"column\" }}>\n          <QuestionTypeBox type=\"MCQ\" />\n          <QuestionTypeBox type=\"Structured\" />\n          <QuestionTypeBox type=\"Fill-in\" />\n          <QuestionTypeBox type=\"Essay\" />\n        </View>\n        {activeType == \"MCQ\" && (\n          <View style={{ flexDirection: \"column\" }}>\n            <Text\n              style={{\n                fontFamily: \"Lato-Black\",\n                color: \"silver\",\n                fontSize: 16,\n                marginTop: 12,\n                marginBottom: 8,\n              }}\n            >\n              Options\n            </Text>\n            <AnswerOption option=\"Option 1\" num={1} />\n            <AnswerOption option=\"Option 2\" num={2} />\n            <AnswerOption option=\"Option 3\" num={3} />\n            <AnswerOption option=\"Option 4\" num={4} />\n          </View>\n        )}\n        {activeType != \"MCQ\" && (\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              color: \"silver\",\n              fontSize: 16,\n              marginTop: 12,\n              marginBottom: 8,\n            }}\n          >\n            Answer\n          </Text>\n        )}\n        {activeType == \"Essay\" && <EssayInput />}\n        {activeType == \"Fill-in\" && <FillInInput />}\n        {activeType == \"Structured\" && <StructuredInput />}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={{\n          paddingHorizontal: 20,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginBottom: 12,\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Kytte Editor\n          </Text>\n          {selected.length > 0 && (\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                color=\"silver\"\n                contentStyle={{ height: 50 }}\n                theme={{ roundness: 24, colors: { primary: \"white\" } }}\n                mode=\"contained\"\n                onPress={() => {\n                  addLesson(selected);\n                }}\n              >\n                Create lesson\n              </Button>\n              <Button\n                contentStyle={{ height: 50 }}\n                style={{ marginHorizontal: 8 }}\n                theme={{ roundness: 24 }}\n                mode=\"contained\"\n                onPress={() => setShowQuestionLessonChooser(true)}\n              >\n                Create question\n              </Button>\n            </View>\n          )}\n        </View>\n        {questionMaker()}\n        <TextInput\n          multiline={true}\n          value={content}\n          placeholderTextColor=\"silver\"\n          onChangeText={(text) => setContent(text)}\n          onSelectionChange={({\n            nativeEvent: {\n              selection: { start, end },\n            },\n          }) => {\n            let txt = \"\";\n            txt = content.substring(start, end);\n            if (txt.length > 0) {\n              setSelected(txt);\n            } else {\n              setSelected(\"\");\n            }\n          }}\n          style={{\n            outline: \"none\",\n            width: dimensions.window.width * 0.45 - 40,\n            height: dimensions.window.height - 220,\n            fontSize: 18,\n          }}\n          placeholder=\"Paste your content here ...\"\n        />\n      </ScrollView>\n    </View>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Text, View, TextInput } from \"react-native\";\nimport { Button } from \"react-native-paper\";\nimport { Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native\";\nexport default function LessonPreview({\n  content,\n  id,\n  updateLesson,\n  setShowQuestionsManager,\n  showQuestionLessonChooser,\n  setChosenLesson,\n  chosenLesson,\n}) {\n  const [maxLines, setMaxLines] = useState(3);\n  const [tempContent, setTempContent] = useState(\"\");\n\n  const [editing, setEditing] = useState(false);\n\n  console.log(id);\n  useEffect(() => {\n    setTempContent(content);\n  }, [content]);\n  const input = useRef(null);\n  return (\n    <View\n      style={{\n        flexDirection: \"column\",\n        borderWidth: 0.9,\n        borderColor: \"black\",\n        borderRadius: 12,\n        padding: 12,\n        marginVertical: 12,\n        marginRight: 20,\n      }}\n    >\n      {showQuestionLessonChooser && (\n        <TouchableOpacity onPress={() => setChosenLesson(id)}>\n          <View\n            style={{\n              height: 30,\n              width: 30,\n              borderRadius: 15,\n              borderWidth: 2,\n              marginBottom: 8,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {chosenLesson === id ? <Icon size={20} name=\"check\" /> : null}\n          </View>\n        </TouchableOpacity>\n      )}\n      {!editing && <Text numberOfLines={maxLines}>{content}</Text>}\n      {editing && (\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            marginVertical: 12,\n            fontSize: 16,\n          }}\n        >\n          Click in box below to edit lesson\n        </Text>\n      )}\n      {editing && (\n        <View\n          style={{\n            outline: \"none\",\n            width: \"100%\",\n            fontSize: 16,\n            height: 250,\n            backgroundColor: \"#8D99AD\",\n            padding: 16,\n            borderRadius: 12,\n            flexDirection: \"column\",\n          }}\n        >\n          <TextInput\n            ref={input}\n            style={{\n              outline: \"none\",\n              width: \"100%\",\n              fontSize: 16,\n              height: 250,\n              color: \"white\",\n            }}\n            multiline={true}\n            onChangeText={(text) => setTempContent(text)}\n            value={tempContent}\n          />\n        </View>\n      )}\n      <View style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginTop: 8 }}>\n        {!editing && (\n          <Button\n            color=\"black\"\n            style={{ alignSelf: \"flex-start\" }}\n            icon={maxLines == 3 ? \"plus\" : \"minus\"}\n            mode=\"text\"\n            onPress={() => {\n              if (maxLines == 3) {\n                setMaxLines(null);\n              } else {\n                setMaxLines(3);\n              }\n            }}\n          >\n            {maxLines == 3 ? \"Expand\" : \"Collapse\"}\n          </Button>\n        )}\n        <Button\n          onPress={() => {\n            if (!editing) {\n              input.current?.requestFocus();\n            }\n            setEditing((editing) => !editing);\n          }}\n          icon={!editing ? \"pencil\" : \"close\"}\n          color=\"black\"\n        >\n          {!editing ? \" Edit Lesson\" : \"Cancel editing\"}\n        </Button>\n        {!editing && (\n          <Button\n            icon=\"cloud-question\"\n            color=\"black\"\n            onPress={() => setShowQuestionsManager(true)}\n            style={{ alignSelf: \"flex-start\" }}\n          >\n            Manage questions\n          </Button>\n        )}\n        {editing && (\n          <Button\n            onPress={() => {\n              updateLesson(id, tempContent);\n              setEditing(false);\n            }}\n            type=\"material-community\"\n            icon=\"content-save\"\n            color=\"black\"\n          >\n            Save changes\n          </Button>\n        )}\n        {!editing && (\n          <Button type=\"material-community\" icon=\"image\" color=\"black\">\n            Manage diagrams\n          </Button>\n        )}\n      </View>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillTopic({\n  title,\n  activeSubtopic,\n  setActiveSubtopic,\n  setShowSubtopics,\n  num\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveSubtopic(title);\n        setShowSubtopics(false);\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeSubtopic == title ? \"#55FF83\" : \"white\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>{num}. {title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Dimensions, ScrollView } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nimport LessonPreview from \"./LessonPreview\";\nimport PillSubtopic from \"./PillSubtopic\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default function Previews({\n  subtopics,\n  lessons,\n  show,\n  updateLesson,\n  showQuestionsManager,\n  setShowQuestionsManager,\n  activeSubtopic,\n  setActiveSubtopic,\n  showQuestionLessonChooser,\n  setChosenLesson,\n  chosenLesson,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const [showSubtopics, setShowSubtopics] = useState(false);\n\n  const viewList = () => {\n    return subtopics.map((element, i) => {\n      return (\n        <PillSubtopic\n          activeSubtopic={activeSubtopic}\n          setShowSubtopics={setShowSubtopics}\n          setActiveSubtopic={setActiveSubtopic}\n          key={i.toString()}\n          num={i + 1}\n          title={element}\n        />\n      );\n    });\n  };\n\n  const lessonList = () => {\n    return lessons.map((element, i) => {\n      return (\n        <LessonPreview\n          chosenLesson={chosenLesson}\n          setChosenLesson={setChosenLesson}\n          showQuestionLessonChooser={showQuestionLessonChooser}\n          showQuestionsManager={showQuestionsManager}\n          setShowQuestionsManager={setShowQuestionsManager}\n          updateLesson={updateLesson}\n          id={element.id}\n          key={i.toString()}\n          content={element.content}\n        />\n      );\n    });\n  };\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.45,\n      height: dimensions.window.height - 120,\n      flexDirection: \"column\",\n      backgroundColor: \"#D6E5FA\",\n      padding: 20,\n      borderRadius: 12,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets//fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets//fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets//fonts/Lato-Regular.ttf\"),\n  });\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 12,\n          alignItems: \"center\",\n        }}\n      >\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            fontSize: 20,\n            color: \"black\",\n            opacity: 0.9,\n          }}\n        >\n          Content preview\n        </Text>\n        <Button\n          mode=\"contained\"\n          icon={!showSubtopics ? \"chevron-down\" : \"close\"}\n          color=\"#3D3A39\"\n          style={{ marginLeft: 16 }}\n          theme={{ roundness: 24 }}\n          contentStyle={{ height: 45 }}\n          onPress={() => setShowSubtopics(!showSubtopics)}\n        >\n          {activeSubtopic == \"\" ? \"Subtopic\" : activeSubtopic}\n        </Button>\n      </View>\n      {showSubtopics && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {viewList()}\n        </View>\n      )}\n      <ScrollView>{show && lessonList()}</ScrollView>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillTopic({\n  title,\n  activeTopic,\n  setActiveTopic,\n  setShowTopics,\n  num\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveTopic(title);\n        setShowTopics(false);\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeTopic == title ? \"#55FF83\" : \"#ACACAC\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>{num}. {title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillSubject({\n  title,\n  activeSubject,\n  setActiveSubject,\n  setShowSubjects,\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveSubject(title);\n        setShowSubjects(false);\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeSubject == title ? \"#55FF83\" : \"#ACACAC\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>{title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Text, View, TextInput, ScrollView } from \"react-native\";\nimport { Button } from \"react-native-paper\";\nimport { Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native\";\n\nexport default function LessonPreview({\n  question,\n  id,\n  type,\n  options,\n  answer,\n  updateQuestion,\n}) {\n  const [maxLines, setMaxLines] = useState(3);\n  const [tempContent, setTempContent] = useState(\"\");\n  const [tempAnswer, setTempAnswer] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const [editingAnswer, setEditingAnswer] = useState(false);\n\n  const [answerList, setAnswerList] = useState([]);\n\n  useEffect(() => {\n    setTempContent(question);\n    type != \"MCQ\" && setTempAnswer(answer);\n    if (type == \"MCQ\") {\n      setAnswerList(options.split(\"**\"));\n    }\n  }, [question]);\n\n  const [optionAnswer, setOptionAnswer] = useState(\"\");\n\n  const [ops, setOps] = useState({\n    1: \"\",\n    2: \"\",\n    3: \"\",\n    4: \"\",\n  });\n\n  const done = () => {\n    //  console.log(options);\n  };\n\n  function AnswerOption({ op, num, tempVal, correct }) {\n    const [innerVal, setInnerVal] = useState(tempVal);\n    const updateVal = (txt, num) => {\n      ops[num] = txt;\n      setInnerVal(txt);\n    };\n\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          backgroundColor: \"#FFFDCB\",\n          borderRadius: 8,\n          marginBottom: 4,\n        }}\n      >\n        <View\n          style={{\n            height: \"100%\",\n            backgroundColor: \"#88876D\",\n            width: 35,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: 8,\n          }}\n        >\n          {correct == num - 1 && <Icon color=\"white\" name=\"check\" />}\n          {correct != num - 1 && (\n            <Text style={{ color: \"white\", fontFamily: \"Lato-Light\" }}>\n              {num}\n            </Text>\n          )}\n        </View>\n\n        <TextInput\n          value={innerVal}\n          onChangeText={(text) => {\n            updateVal(text, num);\n          }}\n          style={{\n            paddingHorizontal: 20,\n            paddingVertical: 15,\n            outline: \"none\",\n            flex: 1,\n          }}\n          placeholder={op}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={{\n        flexDirection: \"column\",\n        borderWidth: 0.9,\n        borderColor: \"black\",\n        borderRadius: 12,\n        padding: 12,\n        marginVertical: 12,\n        marginRight: 20,\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#EAE8BA\",\n          paddingHorizontal: 12,\n          paddingVertical: 8,\n          alignSelf: \"flex-start\",\n          borderRadius: 24,\n          marginBottom: 8,\n        }}\n      >\n        <Text style={{ fontFamily: \"Lato-Black\" }}>{type}</Text>\n      </View>\n      {!editing && (\n        <View style={{ flexDirection: \"column\" }}>\n          <Text style={{ fontFamily: \"Lato-Regular\", fontSize: 16 }}>\n            <Text style={{ fontFamily: \"Lato-Black\" }}>Q: </Text>\n            {question}\n          </Text>\n          <Text\n            style={{ fontFamily: \"Lato-Regular\", fontSize: 16, marginTop: 12 }}\n          >\n            <Text style={{ fontFamily: \"Lato-Black\" }}>O: </Text>\n            {options.replaceAll(\"**\", \" ** \")}\n            {options == \"\" && \"N/A\"}\n          </Text>\n          <Text\n            style={{ fontFamily: \"Lato-Regular\", fontSize: 16, marginTop: 12 }}\n          >\n            <Text style={{ fontFamily: \"Lato-Black\" }}>A: </Text>\n            {options != \"\" && options.split(\"**\")[answer]}\n            {options == \"\" && answer}\n          </Text>\n        </View>\n      )}\n      {editing && (\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            marginVertical: 12,\n            fontSize: 16,\n          }}\n        >\n          Click in box below to edit question\n        </Text>\n      )}\n      {editing && (\n        <View\n          style={{\n            width: \"100%\",\n            fontSize: 16,\n            height: 100,\n            backgroundColor: \"#D7D5AB\",\n            padding: 16,\n            borderRadius: 12,\n            flexDirection: \"column\",\n          }}\n        >\n          <TextInput\n            style={{\n              outline: \"none\",\n              width: \"100%\",\n              fontSize: 16,\n              height: 100,\n            }}\n            multiline={true}\n            onChangeText={(text) => setTempContent(text)}\n            value={tempContent}\n          />\n        </View>\n      )}\n\n      {editingAnswer && (\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            marginVertical: 12,\n            fontSize: 16,\n          }}\n        >\n          Click in box below to edit answer\n        </Text>\n      )}\n\n      {editingAnswer && (\n        <View>\n          {type != \"MCQ\" && (\n            <View\n              style={{\n                width: \"100%\",\n                fontSize: 16,\n                height: 100,\n                backgroundColor: \"#D7D5AB\",\n                padding: 16,\n                borderRadius: 12,\n                flexDirection: \"column\",\n              }}\n            >\n              <TextInput\n                style={{\n                  outline: \"none\",\n                  width: \"100%\",\n                  fontSize: 16,\n                  height: 100,\n                }}\n                multiline={true}\n                onChangeText={(text) => setTempAnswer(text)}\n                value={tempAnswer}\n              />\n            </View>\n          )}\n          {type == \"MCQ\" && (\n            <View style={{ flexDirection: \"column\" }}>\n              <Text\n                style={{\n                  fontFamily: \"Lato-Black\",\n                  color: \"silver\",\n                  fontSize: 16,\n                  marginTop: 12,\n                  marginBottom: 8,\n                }}\n              >\n                Options\n              </Text>\n              <AnswerOption\n                correct={answer}\n                tempVal={answerList[0]}\n                option=\"Option 1\"\n                num={1}\n              />\n              <AnswerOption\n                correct={answer}\n                tempVal={answerList[1]}\n                option=\"Option 2\"\n                num={2}\n              />\n              <AnswerOption\n                correct={answer}\n                tempVal={answerList[2]}\n                option=\"Option 3\"\n                num={3}\n              />\n              <AnswerOption\n                correct={answer}\n                tempVal={answerList[3]}\n                option=\"Option 4\"\n                num={4}\n              />\n            </View>\n          )}\n        </View>\n      )}\n      <View style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginTop: 8 }}>\n        <Button\n          onPress={() => {\n            setEditing((editing) => !editing);\n          }}\n          icon={!editing ? \"pencil\" : \"close\"}\n          color=\"black\"\n        >\n          {!editing ? \" Edit question\" : \"Cancel editing\"}\n        </Button>\n        {!editing && !editingAnswer && (\n          <Button\n            onPress={() => {\n              setEditingAnswer((editingAnswer) => !editingAnswer);\n            }}\n            type=\"material-community\"\n            icon=\"pencil\"\n            color=\"black\"\n          >\n            Edit answer\n          </Button>\n        )}\n        {!editing && !editingAnswer && (\n          <Button type=\"material-community\" icon=\"trash-can\" color=\"black\">\n            Delete question\n          </Button>\n        )}\n\n        {editing && (\n          <Button\n            onPress={() => {\n              updateLesson(id, tempContent);\n              setEditing(false);\n            }}\n            type=\"material-community\"\n            icon=\"check\"\n            color=\"black\"\n          >\n            Save changes\n          </Button>\n        )}\n\n        {editingAnswer && (\n          <Button\n            onPress={() => {\n              updateLesson(id, tempContent);\n              setEditing(false);\n            }}\n            type=\"material-community\"\n            icon=\"check\"\n            color=\"black\"\n          >\n            Save changes\n          </Button>\n        )}\n\n        {editingAnswer && (\n          <Button\n            onPress={() => {\n              setEditingAnswer(false);\n            }}\n            type=\"material-community\"\n            icon=\"close\"\n            color=\"black\"\n          >\n            Cancel editing\n          </Button>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Dimensions, ScrollView } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\nimport QuestionPreview from \"./QuesionsManager/QuestionPreview\";\n\nexport default function Editor({ lessonID, setShowQuestionsManager }) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.5,\n      height: dimensions.window.height - 120,\n      flexDirection: \"column\",\n      backgroundColor: \"#F6F4C9\",\n      padding: 20,\n      borderRadius: 12,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  const [questionList, setQuestionList] = useState([\n    {\n      ID: \"Q001\",\n      Number: 1,\n      LessonID: \"L001\",\n      Question:\n        \"Which one of the following is the correct definition of the term cell?\",\n      Type: \"MCQ\",\n      Options:\n        \"The basic building block of all living things**A living thing**The bricks that make up a house**The structure that gives function to things\",\n      Answer: \"0\",\n    },\n    {\n      ID: \"Q002\",\n      Number: 2,\n      LessonID: \"L001\",\n      Question: \"Define the term cell?\",\n      Type: \"Structured\",\n      Options: \"\",\n      Answer:\n        \"The basic building block of all living things||The structural and functional unit of all living things\",\n    },\n    {\n      ID: \"Q003\",\n      Number: 3,\n      LessonID: \"L005\",\n      Question: \"Which cell component controls the movement of substances?\",\n      Type: \"Fill-in\",\n      Options: \"\",\n      Answer: \"Cell membrane\",\n    },\n  ]);\n\n  const updateQuestion = () => {};\n\n  const qList = () => {\n    return questionList.map((element, i) => {\n      return (\n        <QuestionPreview\n          updateQuestion={updateQuestion}\n          id={element.id}\n          key={i.toString()}\n          question={element.Question}\n          answer={element.Answer}\n          options={element.Options}\n          type={element.Type}\n        />\n      );\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginBottom: 12,\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Questions manager\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Button color=\"black\" onPress={() => {}} icon=\"check\">\n              Save changes\n            </Button>\n            <Button\n              color=\"orange\"\n              onPress={() => setShowQuestionsManager(false)}\n              icon=\"close\"\n            >\n              Close\n            </Button>\n          </View>\n        </View>\n        {qList()}\n      </ScrollView>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillTopic({\n  title,\n  activeSubtopic,\n  setActiveSubtopic,\n  num\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveSubtopic(title);\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeSubtopic == title ? \"#55FF83\" : \"white\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>{num}. {title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillTopic({\n  title,\n  activeObjective,\n  setActiveObjective,\n  num,\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveObjective(title);\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeObjective == title ? \"#55FF83\" : \"white\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>\n          {num}. {title}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Divider } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nimport LessonPreview from \"./LessonPreview\";\nimport PillSubtopic from \"./LessonMaker/PillSubtopic\";\nimport PillObjective from \"./LessonMaker/PillObjective\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\nimport { Icon } from \"react-native-elements\";\n\nexport default function Previews({\n  subtopics,\n  objectives,\n  currLesson,\n  setShowLessonMaker,\n  saveLesson,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const [activeSubtopic, setActiveSubtopic] = useState(\"\");\n  const [activeObjective, setActiveObjective] = useState(\"\");\n  const [maxLines, setMaxLines] = useState(3);\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width,\n      height: dimensions.window.height,\n      flexDirection: \"column\",\n      position: \"fixed\",\n      top: 0,\n      right: 0,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets//fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets//fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets//fonts/Lato-Regular.ttf\"),\n  });\n\n  const viewList = () => {\n    return subtopics.map((element, i) => {\n      return (\n        <PillSubtopic\n          activeSubtopic={activeSubtopic}\n          setActiveSubtopic={setActiveSubtopic}\n          key={i.toString()}\n          num={i + 1}\n          title={element}\n        />\n      );\n    });\n  };\n\n  const listObjectives = () => {\n    return objectives.map((element, i) => {\n      return (\n        <PillObjective\n          activeObjective={activeObjective}\n          setActiveObjective={setActiveObjective}\n          key={i.toString()}\n          num={i + 1}\n          title={element}\n        />\n      );\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          flexDirection: \"column\",\n          padding: 20,\n          position: \"fixed\",\n          top: 0,\n          right: 0,\n          backgroundColor: \"black\",\n          opacity: 0.8,\n        }}\n      />\n      <ScrollView>\n        <View\n          style={{\n            alignSelf: \"center\",\n            margin: 30,\n            borderRadius: 12,\n            backgroundColor: \"#121212\",\n            padding: 20,\n            flexDirection: \"column\",\n            width: 500,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity onPress={() => setShowLessonMaker(false)}>\n              <Icon\n                color=\"white\"\n                style={{ alignSelf: \"flex-start\" }}\n                name=\"close\"\n              />\n            </TouchableOpacity>\n            <Text\n              style={{ color: \"white\", fontFamily: \"Lato-Black\", fontSize: 18 }}\n            >\n              Create lesson\n            </Text>\n          </View>\n\n          <Text\n            numberOfLines={maxLines}\n            style={{\n              marginVertical: 16,\n              color: \"white\",\n              opacity: 0.7,\n              fontFamily: \"Lato-Light\",\n              fontSize: 18,\n            }}\n          >\n            {currLesson}\n          </Text>\n          <Button\n            color=\"silver\"\n            style={{ alignSelf: \"flex-start\" }}\n            icon={maxLines == 3 ? \"plus\" : \"minus\"}\n            mode=\"text\"\n            onPress={() => {\n              if (maxLines == 3) {\n                setMaxLines(null);\n              } else {\n                setMaxLines(3);\n              }\n            }}\n          >\n            {maxLines == 3 ? \"Expand\" : \"Collapse\"}\n          </Button>\n          <Divider style={{ backgroundColor: \"grey\", marginTop: 16 }} />\n          <Text\n            style={{\n              color: \"#91FFB1\",\n              fontFamily: \"Lato-Regular\",\n              opacity: 0.8,\n              marginTop: 12,\n              fontSize: 18,\n              marginBottom: 8,\n            }}\n          >\n            Choose subtopic\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            {viewList()}\n          </View>\n\n          <Text\n            style={{\n              color: \"#91FFB1\",\n              fontFamily: \"Lato-Regular\",\n              opacity: 0.8,\n              marginTop: 12,\n              fontSize: 18,\n              marginBottom: 8,\n            }}\n          >\n            Choose objective\n          </Text>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            {listObjectives()}\n          </View>\n\n          <Button\n            theme={{ roundness: 24 }}\n            mode=\"contained\"\n            color=\"yellow\"\n            disabled={\n              activeSubtopic == \"\" || activeObjective == \"\" ? true : false\n            }\n            icon=\"check\"\n            contentStyle={{ height: 55 }}\n            style={{ marginVertical: 16 }}\n            onPress={() =>\n              saveLesson(currLesson, activeObjective, activeSubtopic)\n            }\n          >\n            Save changes\n          </Button>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  ScrollView,\n  Image,\n  FlatList,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nimport { Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native\";\n\nexport default function ImageManager({}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  const [selected, setSelected] = useState(\"\");\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.5,\n      height: dimensions.window.height - 120,\n      flexDirection: \"column\",\n      backgroundColor: \"#FFF9F9\",\n      borderRadius: 12,\n      paddingTop: 20,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  //\n\n  const ImageView = ({ src, description }) => {\n    return (\n      <View style={{ flexDirection: \"row\", marginTop: 16 }}>\n        <Image\n          resizeMode=\"cover\"\n          source={{\n            uri: src,\n          }}\n          style={{\n            height: \"100%\",\n            width: 200,\n            borderRadius: 12,\n            borderWidth: 1,\n            borderColor: \"#CDDDF9\",\n          }}\n        />\n        <View style={{ flexDirection: \"column\", margin: 20, flex: 1 }}>\n          <Text style={{ fontFamily: \"Lato-Black\", fontSize: 16 }}>\n            Description\n          </Text>\n          <Text\n            style={{\n              fontFamily: \"Lato-Regular\",\n              fontSize: 16,\n              marginTop: 8,\n              width: \"100%\",\n            }}\n          >\n            {description}\n          </Text>\n          <View style={{ flexDirection: \"row\", marginTop: 8 }}>\n            <Button type=\"material-community\" icon=\"trash-can\" color=\"#FF868C\">\n              Delete\n            </Button>\n            <Button icon=\"pencil\" color=\"#737C8C\">\n              Edit description\n            </Button>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderItem = ({ item }) => (\n    <ImageView src={item.src} description={item.description} />\n  );\n\n  const [imageList, setImageList] = useState([\n    {\n      id: \"I001\",\n      src: \"https://www.sciencefacts.net/wp-content/uploads/2020/01/Animal-Cell-Diagram.jpg\",\n      description:\n        \"Cells have many parts, each with a different function. Some of these parts, called organelles, are specialized structures that perform certain tasks within the cell.\",\n    },\n  ]);\n\n  const addImage = () => {\n    let copy = imageList;\n    copy.push({\n      id: \"2001\",\n      src: \"https://www.sciencefacts.net/wp-content/uploads/2020/01/Animal-Cell-Diagram.jpg\",\n      description:\n        \"Cells have many parts, each with a different function. Some of these parts, called organelles, are specialized structures that perform certain tasks within the cell.\",\n    });\n    setImageList(copy);\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={{\n          paddingHorizontal: 20,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Image manager\n          </Text>\n          <Button onPress={() => addImage()} color=\"#017E82\" icon=\"plus\">\n            Add image\n          </Button>\n        </View>\n        <FlatList\n          data={imageList}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n        />\n      </ScrollView>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"react-native-elements\";\nimport { useFonts } from \"expo-font\";\nimport Pill from \"./Pill\";\nimport Editor from \"./components/content-maker/Editor\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\nimport Previews from \"./components/content-maker/Previews\";\nimport { Button } from \"react-native-paper\";\nimport PillTopic from \"./components/content-maker/PillTopic\";\nimport PillSubject from \"./components/content-maker/PillSubject\";\nimport QuestionsManager from \"./components/content-maker/QuestionsManager\";\nimport LessonMaker from \"./components/content-maker/LessonMaker\";\nimport ImageManager from \"./components/content-maker/ImageManager\";\n\nexport default function ContentMaker() {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  const [showSubjects, setShowSubjects] = useState(false);\n  const [showTopics, setShowTopics] = useState(false);\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width,\n      height: dimensions.window.height,\n      flexDirection: \"column\",\n      backgroundColor: \"black\",\n      padding: 20,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"./assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"./assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  var items = [\n    \"Biology\",\n    \"Chemistry\",\n    \"Physics\",\n    \"Combined science\",\n    \"Economics\",\n    \"Heritage studies\",\n    \"Computer science\",\n    \"Business and enterprise skills\",\n    \"Commerce\",\n  ];\n\n  const [topics, setTopics] = useState([\n    \"Cells and cellullar activities\",\n    \"Animal science\",\n    \"Plant science\",\n    \"Genetics\",\n    \"Ecosystems\",\n    \"Human nutrion\",\n    \"Reproduction\",\n    \"Microorganisms and diseases\",\n  ]);\n\n  const [subtopics, setSubtopics] = useState([\n    \"Introduction\",\n    \"The cell\",\n    \"Cell organelles\",\n    \"Comparing cells\",\n    \"Summary\",\n  ]);\n\n  const [objectives, setObjectives] = useState([\n    \"No objective (Introduction)\",\n    \"Define the term cell\",\n    \"Describe the different cell organelles\",\n    \"Explain the differences between animal and plant cells\",\n    \"Label plant and animal cells\",\n  ]);\n\n  const [lessons, setLessons] = useState([\n    {\n      id: \"L01\",\n      content:\n        \"Cells have many parts, each with a different function. Some of these parts, called organelles, are specialized structures that perform certain tasks within the cell. Human cells contain the following major parts, listed in alphabetical order:\",\n    },\n  ]);\n\n  const [show, setShow] = useState(true);\n  const [showLessonMaker, setShowLessonMaker] = useState(false);\n  const [currLesson, setCurrLesson] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [showQuestionLessonChooser, setShowQuestionLessonChooser] =\n    useState(false);\n\n  const [chosenLesson, setChosenLesson] = useState(\"\");\n\n  const [activeSubtopic, setActiveSubtopic] = useState(\"\");\n\n  const [showQuestionsManager, setShowQuestionsManager] = useState(false);\n\n  const [showImageImanager, setShowImageManager] = useState(true);\n\n  const addLesson = (content) => {\n    setCurrLesson(content);\n    setShowLessonMaker(true);\n  };\n\n  const saveLesson = (lesson, objective, subtopic) => {\n    setContent((content) => content.replace(lesson, \"\"));\n    setShow((show) => !show);\n    let temp = lessons;\n    let x = lessons.length > 9 ? \"\" : \"0\";\n    let i = \"L\" + x + (temp.length + 1).toString();\n    temp.push({\n      id: i,\n      content: lesson,\n    });\n    setLessons(temp);\n    setShowLessonMaker(false);\n    setTimeout(() => {\n      setShow(true);\n    }, 10);\n  };\n\n  const updateLesson = (id, content) => {\n    const temp = lessons.map((obj) => {\n      if (obj.id === id) {\n        return { ...obj, content: content };\n      }\n      return obj;\n    });\n    setLessons(temp);\n    setShow(false);\n    setTimeout(() => {\n      setShow(true);\n    }, 10);\n  };\n\n  const [activeSubject, setActiveSubject] = useState(\"\");\n  const [activeTopic, setActiveTopic] = useState(\"\");\n\n  const viewList = () => {\n    return items.map((element, i) => {\n      return (\n        <PillSubject\n          activeSubject={activeSubject}\n          setShowSubjects={setShowSubjects}\n          setActiveSubject={setActiveSubject}\n          key={i.toString()}\n          title={element}\n          num={i + 1}\n        />\n      );\n    });\n  };\n\n  const viewListTopics = () => {\n    return topics.map((element, i) => {\n      return (\n        <PillTopic\n          setShowTopics={setShowTopics}\n          activeTopic={activeTopic}\n          setActiveTopic={setActiveTopic}\n          key={i.toString()}\n          title={element}\n          num={i + 1}\n        />\n      );\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          resizeMode=\"contain\"\n          style={{ height: 50, width: 50 }}\n          source={require(\"./assets/logo-main.png\")}\n        />\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            fontSize: 24,\n            color: \"silver\",\n            opacity: 0.9,\n            textAlign: \"center\",\n            marginLeft: 12,\n          }}\n        >\n          Kytte Moonlab\n        </Text>\n        <Button\n          mode=\"contained\"\n          icon={!showSubjects ? \"chevron-down\" : \"close\"}\n          color=\"#3D3A39\"\n          style={{ marginLeft: 16 }}\n          theme={{ roundness: 24 }}\n          contentStyle={{ height: 45 }}\n          onPress={() => setShowSubjects(!showSubjects)}\n        >\n          {activeSubject == \"\" ? \"Select subject\" : activeSubject}\n        </Button>\n        <Button\n          mode=\"contained\"\n          icon={!showTopics ? \"chevron-down\" : \"close\"}\n          color=\"#3D3A39\"\n          style={{ marginLeft: 16 }}\n          theme={{ roundness: 24 }}\n          contentStyle={{ height: 45 }}\n          onPress={() => setShowTopics(!showTopics)}\n        >\n          {activeTopic == \"\" ? \"Select topic\" : activeTopic}\n        </Button>\n      </View>\n      {showSubjects && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            marginTop: 8,\n          }}\n        >\n          {viewList()}\n        </View>\n      )}\n      {showTopics && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            marginTop: 8,\n          }}\n        >\n          {viewListTopics()}\n        </View>\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          marginTop: 24,\n          justifyContent: \"space-between\",\n        }}\n      >\n        {!showQuestionsManager && !showImageImanager && (\n          <Editor\n            setShowQuestionLessonChooser={setShowQuestionLessonChooser}\n            content={content}\n            setContent={setContent}\n            addLesson={addLesson}\n          />\n        )}\n        {showImageImanager && <ImageManager />}\n        {showQuestionsManager && (\n          <QuestionsManager\n            showQuestionsManager={showQuestionsManager}\n            setShowQuestionsManager={setShowQuestionsManager}\n          />\n        )}\n\n        <Previews\n          chosenLesson={chosenLesson}\n          setChosenLesson={setChosenLesson}\n          showQuestionLessonChooser={showQuestionLessonChooser}\n          activeSubtopic={activeSubtopic}\n          setActiveSubtopic={setActiveSubtopic}\n          showQuestionsManager={showQuestionsManager}\n          setShowQuestionsManager={setShowQuestionsManager}\n          updateLesson={updateLesson}\n          show={show}\n          lessons={lessons}\n          subtopics={subtopics}\n        />\n      </View>\n      {showLessonMaker && (\n        <LessonMaker\n          saveLesson={saveLesson}\n          objectives={objectives}\n          setShowLessonMaker={setShowLessonMaker}\n          currLesson={currLesson}\n          subtopics={subtopics}\n        />\n      )}\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Dimensions, Image } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"react-native-elements\";\nimport { useFonts } from \"expo-font\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { TextInput } from \"react-native-paper\";\nimport { TouchableOpacity } from \"react-native\";\nimport { Button } from \"react-native-paper\";\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default function Setup({ setShowSetup }) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width,\n      height: dimensions.window.height,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"./assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"./assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          opacity: 0.9,\n          backgroundColor: \"black\",\n        }}\n      />\n      <View\n        style={{\n          alignSelf: \"center\",\n          margin: 30,\n          borderRadius: 12,\n          backgroundColor: \"#121212\",\n          padding: 20,\n          flexDirection: \"column\",\n          width: 300,\n          height: 400,\n        }}\n      >\n        <TouchableOpacity onPress={() => setShowSetup(false)}>\n          <Icon style={{ alignSelf: \"flex-start\" }} name=\"close\" />\n        </TouchableOpacity>\n        <TextInput\n          placeholderTextColor=\"#6B6B6B\"\n          mode=\"outlined\"\n          outlineColor=\"#2D2D2D\"\n          left={<TextInput.Icon color=\"#6B6B6B\" name=\"book-open\" />}\n          right={<TextInput.Icon color=\"#6B6B6B\" name=\"plus\" />}\n          theme={{\n            roundness: 24,\n            colors: { primary: \"#3D3D3D\", accent: \"#3D3D3D\", text: \"#C7C7C7\" },\n          }}\n          placeholder=\"Add a subject\"\n          color=\"white\"\n          style={{ backgroundColor: \"#2D2D2D\", marginTop: 16 }}\n        />\n        <Text\n          style={{\n            marginVertical: 16,\n            color: \"white\",\n            opacity: 0.7,\n            fontFamily: \"Lato-Light\",\n          }}\n        >\n          Active subjects{\" \"}\n          <View\n            style={{\n              height: 20,\n              width: 20,\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              borderRadius: 10,\n              marginLeft: 4,\n            }}\n          >\n            <Text\n              style={{ color: \"black\", opacity: 0.7, fontFamily: \"Lato-Light\" }}\n            >\n              5\n            </Text>\n          </View>\n        </Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            paddingTop: 10,\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"white\",\n              paddingHorizontal: 12,\n              borderRadius: 24,\n              paddingVertical: 12,\n              marginRight: 8,\n              marginVertical: 4,\n              minWidth: 55,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text>Biology</Text>\n          </View>\n          <View\n            style={{\n              backgroundColor: \"white\",\n              paddingHorizontal: 12,\n              borderRadius: 24,\n              paddingVertical: 12,\n              marginRight: 8,\n              marginVertical: 4,\n              minWidth: 55,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text>Physics</Text>\n          </View>\n          <View\n            style={{\n              backgroundColor: \"white\",\n              paddingHorizontal: 12,\n              borderRadius: 24,\n              paddingVertical: 12,\n              marginRight: 8,\n              marginVertical: 4,\n              minWidth: 55,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text>Chemistry</Text>\n          </View>\n          <View\n            style={{\n              backgroundColor: \"white\",\n              paddingHorizontal: 12,\n              borderRadius: 24,\n              paddingVertical: 12,\n              marginRight: 8,\n              marginVertical: 4,\n              minWidth: 55,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text>Combined science</Text>\n          </View>\n          <View\n            style={{\n              backgroundColor: \"white\",\n              paddingHorizontal: 12,\n              borderRadius: 24,\n              paddingVertical: 12,\n              marginRight: 8,\n              marginVertical: 4,\n              minWidth: 55,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Text>Commerce</Text>\n          </View>\n        </View>\n\n        <Button icon=\"check\" color=\"#00F96C\" style={{ marginVertical: 12 }}>\n          Save changes\n        </Button>\n      </View>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\n\nexport default function PillSubjectConfigurator({\n  title,\n  activeSubject,\n  setActiveSubject,\n  setShowSubjects,\n  setActiveTopic,\n  setActiveSubtopic,\n}) {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setActiveSubject(title);\n        setShowSubjects(false);\n        setActiveTopic({ title: \"\", id: \"\" });\n        setActiveSubtopic({ id: \"\", subtopic: \"\" });\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: activeSubject == title ? \"#55FF83\" : \"#ACACAC\",\n          paddingHorizontal: 12,\n          borderRadius: 24,\n          paddingVertical: 12,\n          marginRight: 8,\n          marginVertical: 4,\n          minWidth: 55,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text>{title}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB6uODrpfs82AuWeIruWoFWJ2Hzw3tGpuA\",\r\n  authDomain: \"kytte-ea4e0.firebaseapp.com\",\r\n  projectId: \"kytte-ea4e0\",\r\n  storageBucket: \"kytte-ea4e0.appspot.com\",\r\n  messagingSenderId: \"784408772230\",\r\n  appId: \"1:784408772230:web:43ae26cf8ec5d8e0cc9b07\",\r\n  measurementId: \"G-F5VFK8KQEX\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport { firebase };\r\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  FlatList,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nimport { Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nimport { firebase } from \"../../config\";\n\nexport default function TopicManager({\n  activeSubject,\n  activeTopic,\n  setActiveTopic,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  const db = firebase.firestore();\n\n  const [topics, setTopics] = useState([]);\n  const [original, setOriginal] = useState([]);\n\n  const getTopics = () => {\n    if (activeSubject != \"\") {\n      db.collection(\"subjects\")\n        .doc(activeSubject.toLowerCase().replaceAll(\" \", \"-\"))\n        .collection(\"topics\")\n        .get()\n        .then((querySnapshot) => {\n          let temp = [];\n          querySnapshot.forEach((doc) => {\n            if (doc.data().Title != null) {\n              temp.push({\n                topic: doc.data().Title,\n                num: doc.data().Number - 1,\n              });\n            }\n          });\n          setTopics(temp);\n          setOriginal(temp);\n        });\n    }\n  };\n  useEffect(() => {\n    getTopics();\n  }, [activeSubject]);\n\n  const clearEmppty = () => {\n    let copy = topics;\n    let filled = [];\n    copy.forEach((item, i) => {\n      if (item.topic != \"\") {\n        filled.push(item);\n      }\n    });\n    let updatedNums = [];\n    filled.forEach((item, x) => {\n      updatedNums.push({ topic: item.topic, num: x });\n    });\n    setTopics(updatedNums);\n    setRefresh((refresh) => !refresh);\n  };\n\n  const [saving, setSaving] = useState(false);\n\n  const saveTopics = () => {\n    clearEmppty();\n    setSaving(true);\n    topics.forEach(async (topic, i) => {\n      var saveRef = await db\n        .collection(\"subjects\")\n        .doc(activeSubject.toLowerCase().replaceAll(\" \", \"-\"))\n        .collection(\"topics\");\n\n      let topicID = \"T\";\n      if (topics.length < 10) {\n        topicID += \"0\";\n      }\n      topicID += (topic.num + 1).toString();\n\n      let isLast = false;\n      if (i == topics.length - 1) {\n        isLast = true;\n      }\n\n      await saveRef\n        .doc(topicID)\n        .set({\n          Title: topic.topic,\n          Number: topic.num + 1,\n          Sections: 0,\n          ID: topicID,\n          IsLast: isLast,\n        })\n        .then(function () {\n          console.log(\"Topic Added\");\n          if (i == topics.length - 1) {\n            setSaving(false);\n          }\n        });\n    });\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.32,\n      height: dimensions.window.height - 140,\n      flexDirection: \"column\",\n      backgroundColor: \"#A1AEC5\",\n      borderRadius: 12,\n      minWidth: 400,\n    },\n  });\n\n  const scrollV = useRef();\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets//fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets//fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets//fonts/Lato-Regular.ttf\"),\n  });\n\n  const TopicComponent = ({ num, topic }) => {\n    const [tempTitle, setTempTitle] = useState(topic);\n    const updateVal = (val) => {\n      setTempTitle(val);\n      let copy = topics;\n      copy[num] = { num: copy.length - 1, topic: val };\n      setTopics(copy);\n    };\n\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          backgroundColor: \"#778192\",\n          borderRadius: 8,\n          marginBottom: 4,\n          marginVertical: 8,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            if (tempTitle != \"\") {\n              if (activeTopic == tempTitle) {\n                setActiveTopic({ id: \"\", title: \"\" });\n              } else {\n                let topicID = \"T\";\n                if (topics.length < 10) {\n                  topicID += \"0\";\n                }\n                topicID += (num + 1).toString();\n                setActiveTopic({ title: tempTitle, id: topicID });\n              }\n            }\n          }}\n        >\n          <View\n            style={{\n              height: \"100%\",\n              backgroundColor: \"#8C97AB\",\n              width: 40,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRadius: 8,\n            }}\n          >\n            {activeTopic.title == topic && topic != \"\" && <Icon name=\"check\" />}\n            {activeTopic.title != topic || topic == \"\" ? (\n              <Text style={{ color: \"white\", fontFamily: \"Lato-Light\" }}>\n                {num + 1}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableOpacity>\n\n        <TextInput\n          value={tempTitle}\n          placeholderTextColor=\"silver\"\n          onChangeText={(text) => {\n            updateVal(text);\n          }}\n          style={{\n            paddingHorizontal: 20,\n            paddingVertical: 20,\n            outline: \"none\",\n            flex: 1,\n            color: \"white\",\n          }}\n          placeholder=\"Enter topic name\"\n        />\n      </View>\n    );\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  const renderItem = ({ item }) => (\n    <TopicComponent topic={item.topic} num={item.num} />\n  );\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        ref={scrollV}\n        style={{\n          padding: 20,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Topic manager\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              onPress={() => {\n                let copy = topics;\n                copy.push({ topic: \"\", num: copy.length });\n                setTopics(copy);\n                setRefresh((refresh) => !refresh);\n                scrollV.current.scrollToEnd();\n              }}\n              color=\"#017E82\"\n              icon=\"plus\"\n            >\n              Add\n            </Button>\n            <Button\n              icon=\"check\"\n              loading={saving}\n              onPress={() => {\n                saveTopics();\n              }}\n              color=\"#017E82\"\n            >\n              Save\n            </Button>\n            <Button\n              icon=\"trash-can\"\n              onPress={() => {\n                clearEmppty();\n              }}\n              color=\"#017E82\"\n            >\n              clear\n            </Button>\n          </View>\n        </View>\n        <View style={{ flexDirection: \"column\", marginTop: 16 }}>\n          <FlatList\n            extraData={refresh}\n            data={topics}\n            renderItem={renderItem}\n            keyExtractor={(item, i) => i}\n          />\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  FlatList,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Divider } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nimport { Icon } from \"react-native-elements\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nimport { firebase } from \"../../config\";\n\nexport default function SubtopicsManager({\n  activeSubject,\n  activeTopic,\n  activeSubtopic,\n  setActiveSubtopic,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.32,\n      height: dimensions.window.height - 140,\n      flexDirection: \"column\",\n      backgroundColor: \"#A1AEC5\",\n      borderRadius: 12,\n      minWidth: 400,\n      marginHorizontal: 8,\n    },\n  });\n\n  const scrollV = useRef();\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets//fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets//fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets//fonts/Lato-Regular.ttf\"),\n  });\n\n  const [subtopics, setSubtopics] = useState([]);\n  const [original, setOriginal] = useState([]);\n  const db = firebase.firestore();\n\n  const getSubtopics = () => {\n    if (activeTopic.title != \"\" && activeSubject != \"\") {\n      db.collectionGroup(\"subtopics\")\n        .where(\"TopicID\", \"==\", activeTopic.id)\n        .where(\n          \"Subject\",\n          \"==\",\n          activeSubject.toLowerCase().replaceAll(\" \", \"-\")\n        )\n        .get()\n        .then((querySnapshot) => {\n          let temp = [];\n          querySnapshot.forEach((doc) => {\n            if (doc.data().Title != null) {\n              temp.push({\n                subtopic: doc.data().Title,\n                num: doc.data().Number - 1,\n              });\n            }\n          });\n          setSubtopics(temp);\n          setOriginal(temp);\n        });\n    }\n  };\n\n  useEffect(() => {\n    setActiveSubtopic({ id: \"\", subtopic: \"\" });\n    getSubtopics();\n  }, [activeTopic]);\n\n  const clearEmppty = () => {\n    let copy = subtopics;\n    let filled = [];\n    copy.forEach((item, i) => {\n      if (item.subtopic != \"\") {\n        filled.push(item);\n      }\n    });\n    let updatedNums = [];\n    filled.forEach((item, x) => {\n      updatedNums.push({ subtopic: item.subtopic, num: x });\n    });\n    setSubtopics(updatedNums);\n    setRefresh((refresh) => !refresh);\n  };\n\n  const [saving, setSaving] = useState(false);\n\n  const saveSubtopics = () => {\n    clearEmppty();\n    setSaving(true);\n    subtopics.forEach(async (subtopic, i) => {\n      var saveRef = await db\n        .collection(\"subjects\")\n        .doc(activeSubject.toLowerCase().replaceAll(\" \", \"-\"))\n        .collection(\"subtopics\");\n\n      let subtopicID = \"S\";\n      if (subtopics.length < 10) {\n        subtopicID += \"0\";\n      }\n\n      subtopicID += (subtopic.num + 1).toString();\n\n      let isLast = false;\n      if (i == subtopics.length - 1) {\n        isLast = true;\n      }\n\n      await saveRef\n        .doc(subtopicID)\n        .set({\n          Title: subtopic.subtopic,\n          Number: subtopic.num + 1,\n          ID: subtopicID,\n          TopicID: activeTopic.id,\n          Subject: activeSubject.toLowerCase().replaceAll(\" \", \"-\"),\n          IsLast: isLast,\n        })\n        .then(function () {\n          console.log(\"Subtopic Added\");\n          if (i == subtopics.length - 1) {\n            setSaving(false);\n          }\n        });\n    });\n  };\n\n  const TopicComponent = ({ num, subtopic }) => {\n    const [tempTitle, setTempTitle] = useState(subtopic);\n    const updateVal = (val) => {\n      setTempTitle(val);\n      let copy = subtopics;\n      copy[num] = { num: copy.length - 1, subtopic: val };\n      setSubtopics(copy);\n    };\n\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          backgroundColor: \"#778192\",\n          borderRadius: 8,\n          marginBottom: 4,\n          marginVertical: 8,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            if (tempTitle != \"\") {\n              let subtopicID = \"S\";\n              if (subtopics.length < 10) {\n                subtopicID += \"0\";\n              }\n              subtopicID += (num + 1).toString();\n              setActiveSubtopic({ id: subtopicID, subtopic: tempTitle });\n            }\n          }}\n        >\n          <View\n            style={{\n              height: \"100%\",\n              backgroundColor: \"#8C97AB\",\n              width: 40,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRadius: 8,\n            }}\n          >\n            {activeSubtopic.subtopic == subtopic && subtopic != \"\" && (\n              <Icon name=\"check\" />\n            )}\n            {activeSubtopic.subtopic != subtopic || subtopic == \"\" ? (\n              <Text style={{ color: \"white\", fontFamily: \"Lato-Light\" }}>\n                {num + 1}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableOpacity>\n\n        <TextInput\n          value={tempTitle}\n          placeholderTextColor=\"silver\"\n          onChangeText={(text) => {\n            updateVal(text);\n          }}\n          style={{\n            paddingHorizontal: 20,\n            paddingVertical: 20,\n            outline: \"none\",\n            flex: 1,\n            color: \"white\",\n          }}\n          placeholder=\"Enter subtopic name\"\n        />\n      </View>\n    );\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  const renderItem = ({ item }) => (\n    <TopicComponent subtopic={item.subtopic} num={item.num} />\n  );\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        ref={scrollV}\n        style={{\n          padding: 20,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Subtopic manager\n          </Text>\n          {activeTopic.title != \"\" && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Button\n                onPress={() => {\n                  let copy = subtopics;\n                  copy.push({ subtopic: \"\", num: copy.length });\n                  setSubtopics(copy);\n                  setRefresh((refresh) => !refresh);\n                  scrollV.current.scrollToEnd();\n                }}\n                color=\"#017E82\"\n                icon=\"plus\"\n              >\n                Add\n              </Button>\n              <Button\n                icon=\"check\"\n                loading={saving}\n                onPress={() => {\n                  saveSubtopics();\n                }}\n                color=\"#017E82\"\n              >\n                Save\n              </Button>\n              <Button\n                icon=\"trash-can\"\n                onPress={() => {\n                  clearEmppty();\n                }}\n                color=\"#017E82\"\n              >\n                clear\n              </Button>\n            </View>\n          )}\n        </View>\n        {activeTopic.title != \"\" && (\n          <View>\n            <Divider\n              style={{ backgroundColor: \"grey\", opacity: 0.2, marginTop: 12 }}\n            />\n            <Text\n              style={{\n                marginVertical: 8,\n                fontFamily: \"Lato-Regular\",\n                fontSize: 16,\n              }}\n            >\n              {activeTopic.title}\n            </Text>\n            <Divider\n              style={{\n                backgroundColor: \"grey\",\n                opacity: 0.2,\n                marginBottom: 12,\n              }}\n            />\n          </View>\n        )}\n        <View style={{ flexDirection: \"column\", marginTop: 16 }}>\n          {activeTopic.title != \"\" && (\n            <FlatList\n              extraData={refresh}\n              data={subtopics}\n              renderItem={renderItem}\n              keyExtractor={(item, i) => i}\n            />\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TextInput,\n  FlatList,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Divider } from \"react-native-paper\";\nimport { useFonts } from \"expo-font\";\nimport { Icon } from \"react-native-elements\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nimport { firebase } from \"../../config\";\n\nexport default function SubtopicsManager({\n  activeSubject,\n  activeTopic,\n  activeSubtopic,\n}) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width * 0.32,\n      height: dimensions.window.height - 140,\n      flexDirection: \"column\",\n      backgroundColor: \"#A1AEC5\",\n      borderRadius: 12,\n      minWidth: 400,\n    },\n  });\n\n  const scrollV = useRef();\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"../../assets//fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"../../assets//fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"../../assets//fonts/Lato-Regular.ttf\"),\n  });\n\n  const [objectives, setObjectives] = useState([]);\n  const [original, setOriginal] = useState([]);\n  const db = firebase.firestore();\n\n  const getObjectives = () => {\n    if (activeTopic.title != \"\" && activeSubject != \"\") {\n      db.collectionGroup(\"objectives\")\n        .where(\"TopicID\", \"==\", activeTopic.id)\n        .where(\"SubtopicID\", \"==\", activeSubtopic.id)\n        .where(\n          \"Subject\",\n          \"==\",\n          activeSubject.toLowerCase().replaceAll(\" \", \"-\")\n        )\n        .get()\n        .then((querySnapshot) => {\n          let temp = [];\n          querySnapshot.forEach((doc) => {\n            if (doc.data().Title != null) {\n              temp.push({\n                objective: doc.data().Title,\n                num: doc.data().Number - 1,\n              });\n            }\n          });\n          setObjectives(temp);\n          setOriginal(temp);\n          setRefresh(true);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getObjectives();\n  }, [activeSubtopic]);\n\n  const clearEmppty = () => {\n    let copy = objectives;\n    let filled = [];\n    copy.forEach((item, i) => {\n      if (item.objective != \"\") {\n        filled.push(item);\n      }\n    });\n    let updatedNums = [];\n    filled.forEach((item, x) => {\n      updatedNums.push({ objective: item.objective, num: x });\n    });\n    setObjectives(updatedNums);\n    setRefresh((refresh) => !refresh);\n  };\n\n  const [saving, setSaving] = useState(false);\n\n  const saveObjectives = () => {\n    clearEmppty();\n    setSaving(true);\n    objectives.forEach(async (objective, i) => {\n      var saveRef = await db\n        .collection(\"subjects\")\n        .doc(activeSubject.toLowerCase().replaceAll(\" \", \"-\"))\n        .collection(\"objectives\");\n\n      let objectiveID = \"O\";\n      if (objectives.length < 10) {\n        objectiveID += \"0\";\n      }\n\n      objectiveID += (objective.num + 1).toString();\n\n      let isLast = false;\n      if (i == objectives.length - 1) {\n        isLast = true;\n      }\n\n      await saveRef\n        .doc(objectiveID)\n        .set({\n          Title: objective.objective,\n          Number: objective.num + 1,\n          ID: objectiveID,\n          TopicID: activeTopic.id,\n          Subject: activeSubject.toLowerCase().replaceAll(\" \", \"-\"),\n          IsLast: isLast,\n          SubtopicID: activeSubtopic.id,\n        })\n        .then(function () {\n          console.log(\"objective Added\");\n          if (i == objectives.length - 1) {\n            setSaving(false);\n          }\n        });\n    });\n  };\n\n  const TopicComponent = ({ num, objective }) => {\n    const [tempTitle, setTempTitle] = useState(objective);\n    const updateVal = (val) => {\n      setTempTitle(val);\n      let copy = objectives;\n      copy[num] = { num: copy.length - 1, objective: val };\n      setObjectives(copy);\n    };\n\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          backgroundColor: \"#778192\",\n          borderRadius: 8,\n          marginBottom: 4,\n          marginVertical: 8,\n        }}\n      >\n        <View\n          style={{\n            height: \"100%\",\n            backgroundColor: \"#8C97AB\",\n            width: 40,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: 8,\n          }}\n        >\n          <Text style={{ color: \"white\", fontFamily: \"Lato-Light\" }}>\n            {num + 1}\n          </Text>\n        </View>\n\n        <TextInput\n          value={tempTitle}\n          placeholderTextColor=\"silver\"\n          onChangeText={(text) => {\n            updateVal(text);\n          }}\n          style={{\n            paddingHorizontal: 20,\n            paddingVertical: 20,\n            outline: \"none\",\n            flex: 1,\n            color: \"white\",\n          }}\n          placeholder=\"Enter objective name\"\n        />\n      </View>\n    );\n  };\n\n  const [refresh, setRefresh] = useState(false);\n\n  const renderItem = ({ item }) => (\n    <TopicComponent objective={item.objective} num={item.num} />\n  );\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        ref={scrollV}\n        style={{\n          padding: 20,\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text\n            style={{\n              fontFamily: \"Lato-Black\",\n              fontSize: 20,\n              opacity: 0.9,\n            }}\n          >\n            Objective manager\n          </Text>\n          {activeSubtopic.subtopic != \"\" && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Button\n                onPress={() => {\n                  let copy = objectives;\n                  copy.push({ objective: \"\", num: copy.length });\n                  setObjectives(copy);\n                  setRefresh((refresh) => !refresh);\n                  scrollV.current.scrollToEnd();\n                }}\n                color=\"#017E82\"\n                icon=\"plus\"\n              >\n                Add\n              </Button>\n              <Button\n                icon=\"check\"\n                loading={saving}\n                onPress={() => {\n                  saveObjectives();\n                }}\n                color=\"#017E82\"\n              >\n                Save\n              </Button>\n              <Button\n                icon=\"trash-can\"\n                onPress={() => {\n                  clearEmppty();\n                }}\n                color=\"#017E82\"\n              >\n                clear\n              </Button>\n            </View>\n          )}\n        </View>\n        {activeSubtopic.subtopic != \"\" && (\n          <View>\n            <Divider\n              style={{ backgroundColor: \"grey\", opacity: 0.2, marginTop: 12 }}\n            />\n            <Text\n              style={{\n                marginVertical: 8,\n                fontFamily: \"Lato-Regular\",\n                fontSize: 16,\n              }}\n            >\n              {activeSubtopic.subtopic}\n            </Text>\n            <Divider\n              style={{\n                backgroundColor: \"grey\",\n                opacity: 0.2,\n                marginBottom: 12,\n              }}\n            />\n          </View>\n        )}\n        <View style={{ flexDirection: \"column\", marginTop: 16 }}>\n          {activeTopic.title != \"\" && (\n            <FlatList\n              extraData={refresh}\n              data={objectives}\n              renderItem={renderItem}\n              keyExtractor={(item, i) => i}\n            />\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"react-native-elements\";\nimport { useFonts } from \"expo-font\";\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\nimport { Button } from \"react-native-paper\";\nimport PillSubject from \"./components/content-maker/PillSubjectConfigurator\";\nimport TopicManager from \"./components/configurator/TopicManager\";\nimport SubtopicsManager from \"./components/configurator/SubtopicsManager\";\nimport ObjectiveManager from \"./components/configurator/ObjectivesManager\";\nimport { firebase } from \"./config\";\n\nexport default function Configurator({ setShowConfigurator }) {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  const styles = StyleSheet.create({\n    container: {\n      width: dimensions.window.width,\n      height: dimensions.window.height,\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      backgroundColor: \"black\",\n      padding: 20,\n    },\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"./assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"./assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  var subjects = [\n    \"Biology\",\n    \"Chemistry\",\n    \"Physics\",\n    \"Combined science\",\n    \"Economics\",\n    \"Heritage studies\",\n    \"Computer science\",\n    \"Business and enterprise skills\",\n    \"Commerce\",\n  ];\n\n  const db = firebase.firestore();\n  const configureModel = () => {\n    subjects.forEach(async (subject) => {\n      const contentModelList = [\n        \"topics\",\n        \"subtopics\",\n        \"objectives\",\n        \"lessons\",\n        \"questions\",\n        \"vocabulary\",\n        \"tests\",\n      ];\n\n      var updateRef = await db.collection(\"subjects\");\n\n      await updateRef\n        .doc(subject.toLowerCase().replaceAll(\" \", \"-\"))\n        .set({})\n        .then(function () {\n          console.log(\"Document Added\");\n        });\n\n      /**\n     *   contentModelList.forEach(async (item) => {\n        var updateRef = await db\n          .collection(\"subjects\")\n          .doc(subject.toLowerCase().replaceAll(\" \", \"-\"))\n          .collection(item);\n\n        await updateRef\n          .doc()\n          .set({ ID: \"Test\" })\n          .then(function () {\n            console.log(\"Document Added\");\n          });\n      });\n     */\n    });\n  };\n\n  useEffect(() => {\n    // configureModel();\n  }, []);\n\n  const [activeSubject, setActiveSubject] = useState(\"\");\n  const [showSubjects, setShowSubjects] = useState(false);\n  const [activeTopic, setActiveTopic] = useState({ id: \"\", title: \"\" });\n  const [activeSubtopic, setActiveSubtopic] = useState({\n    id: \"\",\n    subtopic: \"\",\n  });\n\n  const viewList = () => {\n    return subjects.map((element, i) => {\n      return (\n        <PillSubject\n          activeSubject={activeSubject}\n          setShowSubjects={setShowSubjects}\n          setActiveTopic={setActiveTopic}\n          setActiveSubtopic={setActiveSubtopic}\n          setActiveSubject={setActiveSubject}\n          key={i.toString()}\n          title={element}\n          num={i + 1}\n        />\n      );\n    });\n  };\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          resizeMode=\"contain\"\n          style={{ height: 50, width: 50 }}\n          source={require(\"./assets/logo-main.png\")}\n        />\n        <Text\n          style={{\n            fontFamily: \"Lato-Black\",\n            fontSize: 24,\n            color: \"silver\",\n            opacity: 0.9,\n            textAlign: \"center\",\n            marginLeft: 12,\n          }}\n        >\n          Kytte Moonlab\n        </Text>\n        <Button\n          mode=\"contained\"\n          icon={!showSubjects ? \"chevron-down\" : \"close\"}\n          color=\"#3D3A39\"\n          style={{ marginLeft: 16 }}\n          theme={{ roundness: 24 }}\n          contentStyle={{ height: 45 }}\n          onPress={() => setShowSubjects(!showSubjects)}\n        >\n          {activeSubject == \"\" ? \"Select subject\" : activeSubject}\n        </Button>\n      </View>\n      {showSubjects && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            marginTop: 8,\n          }}\n        >\n          {viewList()}\n        </View>\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          marginTop: 24,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <ScrollView horizontal={true}>\n          <TopicManager\n            activeSubject={activeSubject}\n            activeTopic={activeTopic}\n            setActiveTopic={setActiveTopic}\n          />\n          <SubtopicsManager\n            activeSubject={activeSubject}\n            activeSubtopic={activeSubtopic}\n            setActiveSubtopic={setActiveSubtopic}\n            activeTopic={activeTopic}\n          />\n          <ObjectiveManager\n            activeSubject={activeSubject}\n            activeSubtopic={activeSubtopic}\n            activeTopic={activeTopic}\n          />\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Dimensions, Image } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"react-native-elements\";\nimport { useFonts } from \"expo-font\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport MediaQuery from \"react-responsive\";\nimport { Button } from \"react-native-paper\";\nimport Landing from \"./Landing\";\nimport ContentMaker from \"./ContentMaker\";\n\nimport Setup from \"./Setup\";\nimport Configurator from \"./Configurator\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default function App() {\n  const [dimensions, setDimensions] = useState({ window, screen });\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  const [showSetup, setShowSetup] = useState(false);\n  const [showContentMaker, setShowContentMaker] = useState(false);\n  const [showConfigurator, setShowConfigurator] = useState(true);\n\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n\n  let [fontsLoaded] = useFonts({\n    \"Lato-Black\": require(\"./assets/fonts/Lato-Black.ttf\"),\n    \"Lato-Light\": require(\"./assets/fonts/Lato-Light.ttf\"),\n    \"Lato-Regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n  });\n\n  return (\n    <View style={styles.container}>\n      {!showContentMaker && !showConfigurator && (\n        <Landing\n          setShowConfigurator={setShowConfigurator}\n          setShowContentMaker={setShowContentMaker}\n          setShowSetup={setShowSetup}\n        />\n      )}\n      {showSetup && <Setup setShowSetup={setShowSetup} />}\n      {showContentMaker && (\n        <ContentMaker setShowContentMaker={setShowContentMaker} />\n      )}\n      {showConfigurator && (\n        <Configurator setShowConfigurator={setShowConfigurator} />\n      )}\n    </View>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/moonlab2.f2c0baf2.jpeg\";","module.exports = __webpack_public_path__ + \"./fonts/Lato-Black.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Lato-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Lato-Regular.ttf\";"],"sourceRoot":""}